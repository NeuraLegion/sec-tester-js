{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx", "@typescript-eslint", "import", "jest"],
  "extends": ["prettier", "eslint:recommended"],
  "overrides": [
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@nx/typescript",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/eslint-recommended"
      ],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": ["*.ts", "*.tsx"]
        },
        "import/resolver": {
          "typescript": {}
        }
      },
      "parserOptions": {
        "project": "./tsconfig.*?.json"
      },
      "rules": {
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "no-public",
              "constructors": "no-public"
            }
          }
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "public-static-field",
              "protected-static-field",
              "private-static-field",
              "public-instance-field",
              "protected-instance-field",
              "private-instance-field",
              "constructor",
              "public-static-method",
              "protected-static-method",
              "private-static-method",
              "public-abstract-method",
              "protected-abstract-method",
              "public-instance-method",
              "protected-instance-method",
              "private-instance-method"
            ]
          }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "function",
            "format": ["PascalCase", "camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "forbid"
          },
          {
            "selector": "objectLiteralProperty",
            "format": [],
            "modifiers": ["requiresQuotes"]
          },
          {
            "selector": "method",
            "format": ["camelCase", "PascalCase"],
            "modifiers": ["static"]
          },
          {
            "selector": "property",
            "format": ["camelCase", "UPPER_CASE", "snake_case"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          }
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": true,
            "ignoreProperties": true
          }
        ],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrayDestructuring": true,
            "arrowParameter": false,
            "memberVariableDeclaration": false,
            "variableDeclarationIgnoreFunction": true
          }
        ],
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array",
            "readonly": "array"
          }
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreVoid": true,
            "ignoreIIFE": true
          }
        ],
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/require-await": "error",
        "require-await": "off",
        "no-return-await": "off",
        "arrow-body-style": "error",
        "camelcase": "off",
        "complexity": [
          "error",
          {
            "max": 10
          }
        ],
        "eqeqeq": ["error", "smart"],
        "guard-for-in": "error",
        "import/no-namespace": "error",
        "import/no-self-import": "error",
        "import/no-absolute-path": "error",
        "import/no-duplicates": "error",
        "import/no-extraneous-dependencies": [
          "error",
          {
            "packageDir": ".",
            "devDependencies": false,
            "optionalDependencies": false,
            "peerDependencies": false
          }
        ],
        "import/no-useless-path-segments": [
          "error",
          {
            "noUselessIndex": true
          }
        ],
        "import/order": [
          "error",
          {
            "groups": [
              "index",
              ["sibling", "parent"],
              "internal",
              "external",
              "builtin"
            ]
          }
        ],
        "max-classes-per-file": ["error", 1],
        "max-depth": [
          "error",
          {
            "max": 2
          }
        ],
        "default-param-last": "off",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": "error",
        "no-eval": "error",
        "no-restricted-syntax": ["error", "ForInStatement"],
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "object-shorthand": "error",
        "one-var": ["error", "never"],
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "next": "return",
            "prev": "*"
          }
        ],
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "radix": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "env": {
        "jest": true
      },
      "extends": ["plugin:jest/recommended"],
      "files": ["*.spec.ts", "*.spec.tsx"],
      "rules": {
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-todo": "error",
        "jest/expect-expect": [
          "warn",
          {
            "assertFunctionNames": ["expect", "verify"]
          }
        ],
        "import/no-extraneous-dependencies": [
          "error",
          {
            "packageDir": ".",
            "devDependencies": true
          }
        ]
      }
    },
    {
      "files": ["*.json"],
      "parser": "jsonc-eslint-parser",
      "rules": {
        "@nx/dependency-checks": "error"
      }
    }
  ]
}
